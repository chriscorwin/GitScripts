[0;20;39m[0;20;39m[36m 	@usage [0;20;39m __menu [--prompt=msg] [ [list-item] [list-item] ... ] &| [-k [list-item] [list-item] ...]
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@output [0;20;39m true
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@vars [0;20;39m
[0;20;39m[0;20;39m	$_menu_sel_index
[0;20;39m[0;20;39m	$_menu_sel_value
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@description [0;20;39m
[0;20;39m[0;20;39m	Each parameter is considered a list item in the order in which they are passed.
[0;20;39m[0;20;39m	The script stores each parameter and outputs each element as a selectable item
[0;20;39m[0;20;39m	in a menu. By default, a numeric-based list is generated for each list-item.
[0;20;39m[0;20;39m	If you require a second list that has user-specified indexes (non-numeric), you
[0;20;39m[0;20;39m	can pass them using the following format (note the -k option):
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m		__menu -k ":key1:list item description" ":key2:list item description ..."
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	Each index must be contained within colons. The leading colon is used when parsing
[0;20;39m[0;20;39m	parameters, and to ensure the desired index is what will appear in the menu. If this
[0;20;39m[0;20;39m	leading colon isn't provided, the extra-list may get interpreted as the menu prompt!
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	The message for selecting a menu item can be passed as a parameter as well using
[0;20;39m[0;20;39m	the syntax described below.
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@options [0;20;39m
[0;20;39m[0;20;39m	--prompt=msg	Change the default promp to msg. Be sure to enclose msg in double quotes.
[0;20;39m[0;20;39m	-k          	Begin the list of key-defined list items. These must come AFTER any
[0;20;39m[0;20;39m	            	numeric-based list items, if included.
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@notes [0;20;39m
[0;20;39m[0;20;39m	- If you wish to pass an array as a parameter, be sure to enclose the variable name
[0;20;39m[0;20;39m	in double quotes! Otherwise, the contents will not get expanded!
[0;20;39m[0;20;39m	- User-specified indexes using the colon-based format are displayed below any numeric-
[0;20;39m[0;20;39m	based list.
[0;20;39m[0;20;39m	- Formatting allows for all keys to be at most 3 characters long.
[0;20;39m[0;20;39m	- For custom prompts, do NOT include a trailing colon. It is added automatically.
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@examples [0;20;39m
[0;20;39m[0;20;39m	list="oolah boolah boo"
[0;20;39m[0;20;39m	msg="this is a message"
[0;20;39m[0;20;39m	__menu --prompt="$msg" $list
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	# output of __menu command (snippet) above would be
[0;20;39m[0;20;39m	# ...
[0;20;39m[0;20;39m	# 1.  oolah
[0;20;39m[0;20;39m	# 2.  boolah
[0;20;39m[0;20;39m	# 3.  boo
[0;20;39m[0;20;39m	# --------------------------------------------
[0;20;39m[0;20;39m	# this is a message:
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	echo "You selected: ${_menu_sel_index}"
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	### ...OR we could add an extra option... ###
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	__menu $list -k ":N:Show me something new!"
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	### Can be effectively used in conditional scripts as well ###
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	if __menu $list ":N:Show me something new!"; then
[0;20;39m[0;20;39m	    case $_menu_sel_index in
[0;20;39m[0;20;39m	        1)
[0;20;39m[0;20;39m	            ...
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	        ...
[0;20;39m[0;20;39m	        # don't forget your custom option!
[0;20;39m[0;20;39m	        N) ...;;
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m	        # the only other success in this case is if the user pressed enter to abort.
[0;20;39m[0;20;39m	        # remember __menu will output "You chose to abort."
[0;20;39m[0;20;39m	        *)
[0;20;39m[0;20;39m	            echo "Exiting..."; exit 0;;
[0;20;39m[0;20;39m		esac
[0;20;39m[0;20;39m	else
[0;20;39m[0;20;39m	    echo "Sorry, your choice was not understood. Exiting..."
[0;20;39m[0;20;39m	    exit 1
[0;20;39m[0;20;39m	fi
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@dependencies [0;20;39m
[0;20;39m[0;20;39m	functions/0200.gslog.sh
[0;20;39m[0;20;39m	functions/0400.in_array.sh
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m
[0;20;39m[0;20;39m[36m 	@file [0;20;39m functions/0300.menu.sh
