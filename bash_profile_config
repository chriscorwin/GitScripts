if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

TEXT_BRIGHT=$'\033[1m'
TEXT_DIM=$'\033[2m'
TEXT_NORM=$'\033[0m'
COL_RED=$'\033[31m'
COL_GREEN=$'\033[32m'
COL_VIOLET=$'\033[34m'
COL_YELLOW=$'\033[33m'
COL_MAG=$'\033[35m'
COL_CYAN=$'\033[36m'
COL_WHITE=$'\033[37m'
COL_NORM=$'\033[39m'


###############################################################################
#custom console
###############################################################################
PS1='\[\033]0;$MSYSTEM:\w\007
${COL_GREEN}\u@\h${COL_YELLOW} \d \t ${TEXT_BRIGHT}${COL_MAG}$(__git_ps1)
${COL_CYAN}\w${COL_NORM}
${TEXT_NORM}$ '




###############################################################################
#custom __parse_git_branch function
###############################################################################
function __parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}


###############################################################################
#bring in the bash completion stuff
###############################################################################
source ${gitscripts_path}bash_completion




###############################################################################
# This sets up "bookmarks" for your directories.
# When in a directory, type "s <name>" to store the current path as a bookmark with that name.
# To move to a bookmark, type "g <name>". Tab completion also works!
# To list all bookmarks, type "l".
#
# Credit to: Karthick from http://www.huyng.com/archives/quick-bash-tip-directory-bookmarks/492/
###############################################################################
function s {
cat ~/.sdirs | grep -v "export DIR_$1=" > ~/.sdirs1
mv ~/.sdirs1 ~/.sdirs
echo "export DIR_$1=\"$PWD\"" >> ~/.sdirs
}
function l {
source ~/.sdirs
env | grep "^DIR_" | cut -c5- | grep "^.*="
}
# enable custom tab completion
shopt -s progcomp
# jump to bookmark
function g {
source ~/.sdirs
cd "$(eval $(echo echo $(echo \$DIR_$1)))"
}
# list bookmarks without dirname
function _l {
source ~/.sdirs
env | grep "^DIR_" | cut -c5- | grep "^.*=" | cut -f1 -d "="
}
# completion command for g
function _gcomp {
local curw
COMPREPLY=()
curw=${COMP_WORDS[COMP_CWORD]}
COMPREPLY=($(compgen -W '`_l`' -- $curw))
return 0
}
# bind completion command for g to _gcomp
complete -F _gcomp g
# Usage: g [TAB]



alias test="echo this is a test: ${gitscripts_path}"

###############################################################################
#gitscripts
###############################################################################
alias pullscripts="source ${gitscripts_path}pullscripts.sh"
alias pushscripts="source ${gitscripts_path}pushscripts.sh"
alias refresh_bash_profile="source ${gitscripts_path}refresh_bash_profile.sh"

###############################################################################
#shell convenience
###############################################################################
alias ll="ls -l"
alias lla="ls -la"
alias cd..="cd .."
alias cls="clear"
alias llcoolj="echo \"I'm BAAAD\""
alias hammer="${gitscripts_path}hammertime.sh"
alias aliases="cat ${gitscripts_path}aliases.txt"



###############################################################################
#automated deploys
###############################################################################
#not verified to be working right now, commented out just in case...
#alias prodDeploy="${deploys_path}prodDeploy.sh"



#vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv#
#git stuff
###############################################################################
##basic
###############################################################################
alias addall="git add -A"
alias g="git"
alias reset="git reset --hard"
alias move="git mv"
alias add="git add"
#alias push="git push $1 $2"
alias branch="git branch"
alias status="git status"
alias fetch="git fetch --all --prune"
#alias pull="git pull $1 $2"

###############################################################################
##advanced
###############################################################################
alias commit="source ${gitscripts_path}commit.sh"
alias showlog="${gitscripts_path}showlog.sh"
alias gitdiff="${gitscripts_path}showlog.sh"
alias rungitdiff="${gitscripts_path}run-gitdiff.sh"
alias gitdifftool="${gitscripts_path}gitdifftool.sh"
alias checkout="${gitscripts_path}checkout.sh"
alias merge="${gitscripts_path}merge.sh"
alias mergemaster="${gitscripts_path}mergemaster.sh"
alias mergemasterinto="${gitscripts_path}mergemaster.sh"
alias new="${gitscripts_path}new.sh"
alias delete="${gitscripts_path}delete.sh"
alias updatecore="${gitscripts_path}update-core-branches.sh"
alias clean-branches="${gitscripts_path}clean-branches.sh"
alias contains="${gitscripts_path}contains.sh"
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^#



###############################################################################
#ssh shortcuts
###############################################################################
alias sshgit="ssh git@10.0.2.160"

###############################################################################
#webpage launches
###############################################################################
alias gitwiki="\"${default_browser}\" http://10.0.2.160/wiki/index.php/Git_Commands"
alias local="\"${default_browser}\" http://local.finishline.com/store"

###############################################################################
#programs
###############################################################################
alias eclipse="eclipse.exe"
alias npp="notepad++.exe"
alias sublime="sublimetext.exe"
alias textpad="TextPad.exe"
alias ant="${ANT_HOME}ant"

###############################################################################
#home directories
###############################################################################
alias flhome="cd ${finishline_path}"
alias mediahome="cd ${media_path}"
alias gitscriptshome="cd ${gitscripts_path}"
alias deployhome="cd ${deploys_path}"
alias buildhome="cd ${builds_path}"
alias storehome="cd ${webappwar}"
alias imagescriptshome="cd ${imagescripts_path}"
alias csrhome="cd ${csr_path}"
alias promoeditorhome="cd ${promo_editor_path}"
alias naturaldocshome="cd ${naturaldocs_path}"


###############################################################################
#automation of grunt work
###############################################################################
alias check-nike-track-club="${gitscripts_path}check-nike-track-club.sh"
alias createrepositories="source ${gitscripts_path}createRepositories.sh"


###############################################################################
# Server interaction
###############################################################################
alias startserver="${JBOSS_HOME}run.sh --configuration=finishline -b localhost"
alias stopserver="${JBOSS_HOME}shutdown.sh --shutdown"


###############################################################################
# ANT scripts for front end builds automation
###############################################################################
alias build="ant build -buildfile  ${finishline_path}${myenvironment}.build.xml  -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias cleanbuild="ant clean-build -buildfile  ${finishline_path}${myenvironment}.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias min="ant min -buildfile  ${finishline_path}${myenvironment}.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias webapprefresh="ant webapprefresh -buildfile  ${finishline_path}${myenvironment}.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias webapprefreshminmerge="ant webapprefreshminmerge -buildfile  ${finishline_path}${myenvironment}.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias promosinit="ant initpromos -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias promosliteremerge="ant git-checkout-mergey-thing-lite -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias promosremerge="ant git-checkout-mergey-thing -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias promospush="ant git-push-todays-promos -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias promosimportstouch="ant set-mod-dates-of-imports-to-now -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"
alias zipexports="ant promos-zip-up-exports -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment}  ${ANT_ARGS};"

alias wipeoutallexports="ant -quiet all-wipeout-exports -buildfile  ${builds_path}all-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias allsnapbackexportchanges="ant -quiet snap-to-master-and-back -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};ant -quiet export-changed-by-day -buildfile  ${builds_path}qa-front-end.build.xml -Dmyenvironment=${myenvironment} ${ANT_ARGS};ant -quiet export-changed-by-day -buildfile  ${builds_path}dev-front-end.build.xml -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias alluploadexports="ant -quiet upload-all-exports -buildfile  ${builds_path}all-remotes.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias devexportchanges="ant -quiet export-changed-by-day -buildfile  ${builds_path}dev-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias qaexportchanges="ant -quiet export-changed-by-day -buildfile  ${builds_path}qa-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias stagingexportchanges="ant -quiet export-changed-by-day -buildfile  ${builds_path}staging-front-end.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"
alias allexportchanges="ant -quiet export-changes -buildfile  ${builds_path}all-remotes.build.xml -lib ${ANT_LIB} -Dmyenvironment=${myenvironment} ${ANT_ARGS};"



alias cb=__parse_git_branch


